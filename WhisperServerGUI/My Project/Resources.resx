<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppTitle" xml:space="preserve">
    <value>Whisper Local Server Assistant</value>
  </data>
  <data name="ConfigTabHeader" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="InferenceTabHeader" xml:space="preserve">
    <value>Inference</value>
  </data>
  <data name="StartServerButton" xml:space="preserve">
    <value>Start Server</value>
  </data>
  <data name="StopServerButton" xml:space="preserve">
    <value>Stop Server</value>
  </data>
  <data name="BrowseButton" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="BrowseDotsButton" xml:space="preserve">
    <value>Browse...</value>
  </data>
  <data name="ServerStatusText" xml:space="preserve">
    <value>Server Status: Stopped</value>
  </data>
  <data name="BasicSettingsExpander" xml:space="preserve">
    <value>Basic Settings</value>
  </data>
  <data name="ServerExecutablePathLabel" xml:space="preserve">
    <value>Server Executable:</value>
  </data>
  <data name="ModelPathLabel" xml:space="preserve">
    <value>Model Path:</value>
  </data>
  <data name="ThreadsLabel" xml:space="preserve">
    <value>Threads:</value>
  </data>
  <data name="LanguageLabel" xml:space="preserve">
    <value>Language:</value>
  </data>
  <data name="LanguageAuto" xml:space="preserve">
    <value>Auto</value>
  </data>
  <data name="LanguageEnglish" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="LanguageChinese" xml:space="preserve">
    <value>Chinese</value>
  </data>
  <data name="LanguageSpanish" xml:space="preserve">
    <value>Spanish</value>
  </data>
  <data name="LanguageFrench" xml:space="preserve">
    <value>French</value>
  </data>
  <data name="LanguageGerman" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="LanguageJapanese" xml:space="preserve">
    <value>Japanese</value>
  </data>
  <data name="LanguageKorean" xml:space="preserve">
    <value>Korean</value>
  </data>
  <data name="TranslateCheckBox" xml:space="preserve">
    <value>Translate to English</value>
  </data>
  <data name="DiarizeCheckBox" xml:space="preserve">
    <value>Diarize (Stereo Audio)</value>
  </data>
  <data name="MaxContextLabel" xml:space="preserve">
    <value>Max Context:</value>
  </data>
  <data name="WordThresholdLabel" xml:space="preserve">
    <value>Word Threshold:</value>
  </data>
  <data name="NoFallbackCheckBox" xml:space="preserve">
    <value>No Temperature Fallback</value>
  </data>
  <data name="NoTimestampsCheckBox" xml:space="preserve">
    <value>No Timestamps</value>
  </data>
  <data name="HostLabel" xml:space="preserve">
    <value>Host:</value>
  </data>
  <data name="PortLabel" xml:space="preserve">
    <value>Port:</value>
  </data>
  <data name="FlashAttentionCheckBox" xml:space="preserve">
    <value>Flash Attention</value>
  </data>
  <data name="AdvancedSettingsExpander" xml:space="preserve">
    <value>Advanced Settings</value>
  </data>
  <data name="ProcessorsLabel" xml:space="preserve">
    <value>Processors:</value>
  </data>
  <data name="OffsetTimeLabel" xml:space="preserve">
    <value>Time Offset (ms):</value>
  </data>
  <data name="OffsetSegmentLabel" xml:space="preserve">
    <value>Segment Index Offset:</value>
  </data>
  <data name="DurationLabel" xml:space="preserve">
    <value>Audio Processing Duration (ms):</value>
  </data>
  <data name="MaxLengthLabel" xml:space="preserve">
    <value>Max Segment Length:</value>
  </data>
  <data name="SplitOnWordCheckBox" xml:space="preserve">
    <value>Split on Word</value>
  </data>
  <data name="BestOfLabel" xml:space="preserve">
    <value>Best Of:</value>
  </data>
  <data name="BeamSizeLabel" xml:space="preserve">
    <value>Beam Size:</value>
  </data>
  <data name="AudioContextLabel" xml:space="preserve">
    <value>Audio Context Size:</value>
  </data>
  <data name="EntropyThresholdLabel" xml:space="preserve">
    <value>Entropy Threshold:</value>
  </data>
  <data name="LogProbThresholdLabel" xml:space="preserve">
    <value>Log Probability Threshold:</value>
  </data>
  <data name="DebugModeCheckBox" xml:space="preserve">
    <value>Debug Mode</value>
  </data>
  <data name="TinyDiarizeCheckBox" xml:space="preserve">
    <value>TinyDiarize</value>
  </data>
  <data name="PrintSpecialCheckBox" xml:space="preserve">
    <value>Print Special Tokens</value>
  </data>
  <data name="PrintColorsCheckBox" xml:space="preserve">
    <value>Print Colors</value>
  </data>
  <data name="PrintRealtimeCheckBox" xml:space="preserve">
    <value>Print Real-time Output</value>
  </data>
  <data name="PrintProgressCheckBox" xml:space="preserve">
    <value>Print Progress</value>
  </data>
  <data name="SuppressNonSpeechCheckBox" xml:space="preserve">
    <value>Suppress Non-Speech Tokens</value>
  </data>
  <data name="NoSpeechThresholdLabel" xml:space="preserve">
    <value>No Speech Threshold:</value>
  </data>
  <data name="NoContextCheckBox" xml:space="preserve">
    <value>Do Not Use Previous Audio Context</value>
  </data>
  <data name="NoGPUCheckBox" xml:space="preserve">
    <value>Do Not Use GPU</value>
  </data>
  <data name="OpenVINODeviceLabel" xml:space="preserve">
    <value>OpenVINO Device:</value>
  </data>
  <data name="DTWLabel" xml:space="preserve">
    <value>DTW Model:</value>
  </data>
  <data name="VADEnhancerExpander" xml:space="preserve">
    <value>VAD Options</value>
  </data>
  <data name="VADCheckBox" xml:space="preserve">
    <value>Enable VAD</value>
  </data>
  <data name="VADModelLabel" xml:space="preserve">
    <value>VAD Model:</value>
  </data>
  <data name="VADThresholdLabel" xml:space="preserve">
    <value>VAD Threshold:</value>
  </data>
  <data name="VADMinSpeechDurationLabel" xml:space="preserve">
    <value>VAD Min Speech Duration (ms):</value>
  </data>
  <data name="VADMinSilenceDurationLabel" xml:space="preserve">
    <value>VAD Min Silence Duration (ms):</value>
  </data>
  <data name="VADMaxSpeechDurationLabel" xml:space="preserve">
    <value>VAD Max Speech Duration (s):</value>
  </data>
  <data name="VADSpeechPadLabel" xml:space="preserve">
    <value>VAD Speech Padding (ms):</value>
  </data>
  <data name="VADSamplesOverlapLabel" xml:space="preserve">
    <value>VAD Samples Overlap (s):</value>
  </data>
  <data name="ConvertAudioCheckBox" xml:space="preserve">
    <value>Convert Audio to WAV (Requires ffmpeg)</value>
  </data>
  <data name="RequestPathLabel" xml:space="preserve">
    <value>Request Path:</value>
  </data>
  <data name="InferencePathLabel" xml:space="preserve">
    <value>Inference Path:</value>
  </data>
  <data name="PublicPathLabel" xml:space="preserve">
    <value>Public Folder Path:</value>
  </data>
  <data name="DetectLanguageCheckBox" xml:space="preserve">
    <value>Exit After Language Detection</value>
  </data>
  <data name="PromptLabel" xml:space="preserve">
    <value>Initial Prompt:</value>
  </data>
  <data name="ParameterPreviewExpander" xml:space="preserve">
    <value>Parameter Preview</value>
  </data>
  <data name="UpdatePreviewButton" xml:space="preserve">
    <value>Update Preview</value>
  </data>
  <data name="ServerOutputExpander" xml:space="preserve">
    <value>Server Output</value>
  </data>
  <data name="DropAreaText" xml:space="preserve">
    <value>Drag and drop audio files here or click Browse to select files</value>
  </data>
  <data name="ClearFilesButton" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="StartTranscriptionButton" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="CancelTranscriptionButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ConcurrencyLabel" xml:space="preserve">
    <value>Concurrency:</value>
  </data>
  <data name="ResponseFormatLabel" xml:space="preserve">
    <value>Response Format:</value>
  </data>
  <data name="ResponseFormatVerboseJson" xml:space="preserve">
    <value>Verbose JSON</value>
  </data>
  <data name="ResponseFormatJson" xml:space="preserve">
    <value>JSON</value>
  </data>
  <data name="ResponseFormatText" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="ResponseFormatSrt" xml:space="preserve">
    <value>SRT</value>
  </data>
  <data name="ResponseFormatVtt" xml:space="preserve">
    <value>VTT</value>
  </data>
  <data name="OutputToFileCheckBox" xml:space="preserve">
    <value>Output to File</value>
  </data>
  <data name="OutputToCsvCheckBox" xml:space="preserve">
    <value>Output Merged to CSV</value>
  </data>
</root>
